openapi: 3.0.3
info:
  title: "Authentication Gateway API"
  version: 1.1.0
paths:
  "/":
    get:
      operationId: root
      responses:
        "303":
          description: Redirect to the API documentation
          headers:
            location:
              description: /docs/
              schema:
                type: string
  "/swagger":
    get:
      operationId: swagger
      responses:
        "303":
          description: Redirect to the API documentation
          headers:
            location:
              description: /docs/
              schema:
                type: string
  "/health":
    get:
      operationId: healthCheck
      responses:
        "200":
          description: Health check response
          content:
            text/plain:
              schema:
                type: string
                example: "OK"
  "/authorize":
    post:
      operationId: AuthorizeRequest
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
        - in: header
          name: X-Authorization-Provider
          schema:
            type: string
        - in: header
          name: X-Authorization-Context
          schema:
            type: string
      responses:
        "200":
          description: Access granted message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: "Access Granted"
        "401":
          description: Access denied message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: "Access Denied"
  "/auth/openid/{provider}/login-request":
    get:
      operationId: OpenIdLoginRequest
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
        - in: query
          name: appContext
          schema:
            type: string
          required: true
          description: "Base64Url-encoded object with attributes eg: {appName: string, redirectUrl: string}"
      responses:
        "303":
          description: Redirect to the authentication provider service
          headers:
            location:
              description: Authentication provider service URL
              schema:
                type: string
  "/auth/openid/{provider}/authenticate-response":
    get:
      operationId: OpenIdAuthenticateResponse
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
        - in: query
          name: code
          description: "Login code"
          schema:
            type: string
          required: true
        - in: query
          name: state
          description: "Login state string"
          schema:
            type: string
          required: true
        - in: query
          name: acr_values
          schema:
            type: string
          required: false
        - in: query
          name: scope
          schema:
            type: string
          required: false
        - in: query
          name: session_state
          schema:
            type: string
          required: false
        - in: query
          name: sid
          schema:
            type: string
          required: false
        - in: query
          name: nonce
          schema:
            type: string
          required: false
      responses:
        "303":
          description: Authentication providers callback url, redirect back to the app context, provide loginCode and provider -variables as query params
          headers:
            location:
              description: App context URL
              schema:
                type: string
  "/auth/openid/{provider}/logout-request":
    get:
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
        - in: query
          name: appContext
          schema:
            type: string
          required: true
          description: "Base64Url-encoded object with attributes eg: {appName: string, redirectUrl: string}"
        - in: query
          name: idToken
          schema:
            type: string
          required: false
          description: "Logout id_token hint"
          example: "1233ab213.1233abec213.1233abecd213"
      operationId: OpenIdLogoutRequest
      responses:
        "303":
          description: Redirect to the authentication provider services logout endpoint
          headers:
            location:
              description: Authentication provider service URL
              schema:
                type: string
  "/auth/openid/{provider}/logout-response":
    get:
      operationId: OpenIdLogoutResponse
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
        - in: query
          name: state
          schema:
            type: string
          required: false
          description: "Base64Url-encoded object with attributes eg: {appName: string, redirectUrl: string}"
      responses:
        "303":
          description: Authentication providers callback url, redirect back to the app context
          headers:
            location:
              description: App context URL
              schema:
                type: string
  "/auth/openid/{provider}/auth-token-request":
    post:
      operationId: OpenIdAuthTokenRequest
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
      requestBody:
        description: Retrieve the authentication token from the auth provider service
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["loginCode", "appContext"]
              properties:
                loginCode:
                  type: string
                appContext:
                  type: string
      responses:
        "200":
          description: Auth token
          content:
            application/json:
              schema:
                type: object
                required: ["accessToken", "idToken", "expiresAt"]
                properties:
                  accessToken:
                    type: string
                  idToken:
                    type: string
                    example: "1233ab213.1233abec213.1233abecd213"
                  expiresAt:
                    type: string
                    format: date-time
                    example: "2022-01-30T08:30:00.123Z"
                    description: an ISO-8601 timestamp string that specifies the token expirity datetime
        "401":
          description: "Access token retrieval failed"
          content:
            application/json:
              schema:
                type: object
                required: ["message"]
                properties:
                  message:
                    type: string
  "/auth/openid/{provider}/user-info-request":
    post:
      operationId: OpenIdUserInfoRequest
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
      requestBody:
        description: Retrieve user info from the auth provider service
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["accessToken", "appContext"]
              properties:
                accessToken:
                  type: string
                appContext:
                  type: string
      responses:
        "200":
          description: User info object
          content:
            application/json:
              schema:
                type: object
                required: ["sub"]
                properties:
                  sub:
                    type: string
                  inum:
                    type: string
                  email:
                    type: string
        "401":
          description: "Login invalid or expired"
          content:
            application/json:
              schema:
                type: object
                required: ["message"]
                properties:
                  message:
                    type: string
  "/auth/saml2/{provider}/login-request":
    get:
      operationId: Saml2LoginRequest
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
        - in: query
          name: appContext
          schema:
            type: string
          required: true
          description: "Base64Url-encoded object with attributes eg: {appName: string, redirectUrl: string}"
      responses:
        "303":
          description: Redirect to the authentication provider service
          headers:
            location:
              description: Authentication provider service URL
              schema:
                type: string
  "/auth/saml2/{provider}/authenticate-response":
    post:
      operationId: Saml2AuthenticateResponse
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
      responses:
        "303":
          description: Authentication providers callback url, redirect back to the app context
          headers:
            location:
              description: App context URL
              schema:
                type: string
  "/auth/saml2/{provider}/logout-request":
    get:
      operationId: Saml2LogoutRequest
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
        - in: query
          name: appContext
          schema:
            type: string
          required: true
          description: "Base64Url-encoded object with attributes eg: {appName: string, redirectUrl: string}"
        - in: query
          name: idToken
          schema:
            type: string
          required: false
          description: "Logout id_token hint"
          example: "1233ab213.1233abec213.1233abecd213"
      responses:
        "303":
          description: Redirect to the authentication provider service
          headers:
            location:
              description: Authentication provider service URL
              schema:
                type: string
  "/auth/saml2/{provider}/logout-response":
    get:
      operationId: Saml2LogoutResponse
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
        - in: query
          name: SAMLResponse
          schema:
            type: string
          required: true
          description: "Logout response"
        - in: query
          name: RelayState
          schema:
            type: string
          required: true
          description: "State string"
        - in: query
          name: SigAlg
          schema:
            type: string
          required: true
          description: "SigAlg"
        - in: query
          name: Signature
          schema:
            type: string
          required: true
          description: "Signature"
      responses:
        "303":
          description: Authentication providers callback url, redirect back to the app context
          headers:
            location:
              description: App context URL
              schema:
                type: string
  "/auth/saml2/{provider}/logout":
    $ref: "#/paths/~1auth~1saml2~1{provider}~1logout-response"
  "/auth/saml2/{provider}/auth-token-request":
    post:
      operationId: Saml2AuthTokenRequest
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
      requestBody:
        description: Retrieve the authentication token from the auth provider service
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["loginCode", "appContext"]
              properties:
                loginCode:
                  type: string
                appContext:
                  type: string
      responses:
        "200":
          description: Auth token
          content:
            application/json:
              schema:
                type: object
                required: ["accessToken", "idToken", "expiresAt"]
                properties:
                  accessToken:
                    type: string
                  idToken:
                    type: string
                    example: "1233ab213.1233abec213.1233abecd213"
                  expiresAt:
                    type: string
                    format: date-time
                    example: "2022-01-30T08:30:00.123Z"
                    description: an ISO-8601 timestamp string that specifies the token expirity datetime
        "401":
          description: "Access token retrieval failed"
          content:
            application/json:
              schema:
                type: object
                required: ["message"]
                properties:
                  message:
                    type: string
  "/auth/saml2/{provider}/user-info-request":
    post:
      operationId: Saml2UserInfoRequest
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
      requestBody:
        description: Retrieve user info from the auth provider service
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["accessToken", "appContext"]
              properties:
                accessToken:
                  type: string
                appContext:
                  type: string
      responses:
        "200":
          description: User info object
          content:
            application/json:
              schema:
                type: object
                required: ["profile", "context"]
                properties:
                  profile:
                    type: object
                    required: ["nameID", "email"]
                    properties:
                      nameID:
                        type: string
                      email:
                        type: string
                  context:
                    type: object
                    required: ["AuthnContextClassRef"]
                    properties:
                      AuthnContextClassRef:
                        type: string
        "401":
          description: "Login invalid or expired"
          content:
            application/json:
              schema:
                type: object
                required: ["message"]
                properties:
                  message:
                    type: string
  "/auth/saml2/{provider}/.well-known/jwks.json":
    get:
      operationId: Saml2WellKnownJWKSRequest
      parameters:
        - in: path
          description: "Auth provider ident"
          name: provider
          schema:
            type: string
          required: true
      responses:
        "200":
          description: .well-known/jwks.json
  "/consent/testbed/consent-request":
    get:
      operationId: TestbedConsentRequest
      parameters:
        - in: query
          name: appContext
          schema:
            type: string
          required: true
          description: "Base64Url-encoded object with attributes eg: {appName: string, redirectUrl: string}"
        - in: query
          name: idToken
          schema:
            type: string
          required: true
          description: "Authorization: id_token"
        - in: query
          name: dataSource
          schema:
            type: string
          required: true
          description: "consent dataSource"
          example: "dpp://digitalliving:v2@testbed.fi/draft/Company/Shareholders"
      responses:
        "303":
          description: Redirect user to the testbed consent page
          headers:
            location:
              description: Testbed consent request url
              schema:
                type: string
  "/consent/testbed/consent-response":
    get:
      operationId: TestbedConsentResponse
      parameters:
        - in: query
          name: status
          schema:
            type: string
          required: true
          description: "status of the consent request, allowed values: success, fail"
          example: "success"

      responses:
        "303":
          description: Redirect user back to the appContext app
          headers:
            location:
              description: appContext redirectUrl
              schema:
                type: string
